name: Build AMI

on:
  pull_request:
    branches: [ main ]
    types: [ closed ]

jobs:
  build:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.DEMO_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEMO_SECRET_ACCESS_KEY}}
          aws-region: us-east-1

      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Build with Maven
        run: |
          mvn -B package --file cloudapp/pom.xml
          mkdir application && cp /home/runner/work/webapp/webapp/cloudapp/target/cloudapp-0.0.1-SNAPSHOT.jar application
      - name: Create artifacts
        uses: actions/upload-artifact@v3
        with:
          name: github-actions-artifact
          path: application

      - name: Initialize Packer Template
        uses: hashicorp/packer-github-actions@master
        with:
          command: init

      - name: Validate Packer Template
        uses: hashicorp/packer-github-actions@master
        with:
          command: validate
          arguments: -syntax-only
          target: ami.pkr.hcl

      - name: Build AMI
        uses: hashicorp/packer-github-actions@master
        with:
          command: build
          arguments: "-color=false -on-error=abort"
          target: ami.pkr.hcl

      - name: Create New Launch Template
        run: |
          AMI_ID=$(jq -r '.builds[-1].artifact_id' manifest.json | cut -d ":" -f2)
          echo "AMI is ${AMI_ID}";
          aws ec2 create-launch-template-version --launch-template-name myvpcstack-launch-template --version-description version2 --source-version 1 --launch-template-data "ImageId=$AMI_ID"

      - name: Update The AutoScaling Group
        run: aws autoscaling update-auto-scaling-group --auto-scaling-group-name myvpcstack-asg --launch-template LaunchTemplateName=myvpcstack-launch-template,Version='$Latest'

      - name: Refresh The AutoScaling Group
        run : aws autoscaling start-instance-refresh --auto-scaling-group-name  myvpcstack-asg